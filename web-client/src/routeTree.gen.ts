/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const ChatLazyImport = createFileRoute('/chat')()
const AuthLazyImport = createFileRoute('/auth')()
const IndexLazyImport = createFileRoute('/')()
const ChatIndexLazyImport = createFileRoute('/chat/')()
const AuthResetPinLazyImport = createFileRoute('/auth/reset-pin')()
const AuthLoginLazyImport = createFileRoute('/auth/login')()
const AuthJoinLazyImport = createFileRoute('/auth/join')()

// Create/Update Routes

const ChatLazyRoute = ChatLazyImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/chat.lazy').then((d) => d.Route))

const AuthLazyRoute = AuthLazyImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ChatIndexLazyRoute = ChatIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ChatLazyRoute,
} as any).lazy(() => import('./routes/chat/index.lazy').then((d) => d.Route))

const AuthResetPinLazyRoute = AuthResetPinLazyImport.update({
  id: '/reset-pin',
  path: '/reset-pin',
  getParentRoute: () => AuthLazyRoute,
} as any).lazy(() =>
  import('./routes/auth/reset-pin.lazy').then((d) => d.Route),
)

const AuthLoginLazyRoute = AuthLoginLazyImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthLazyRoute,
} as any).lazy(() => import('./routes/auth/login.lazy').then((d) => d.Route))

const AuthJoinLazyRoute = AuthJoinLazyImport.update({
  id: '/join',
  path: '/join',
  getParentRoute: () => AuthLazyRoute,
} as any).lazy(() => import('./routes/auth/join.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthLazyImport
      parentRoute: typeof rootRoute
    }
    '/chat': {
      id: '/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof ChatLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/join': {
      id: '/auth/join'
      path: '/join'
      fullPath: '/auth/join'
      preLoaderRoute: typeof AuthJoinLazyImport
      parentRoute: typeof AuthLazyImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginLazyImport
      parentRoute: typeof AuthLazyImport
    }
    '/auth/reset-pin': {
      id: '/auth/reset-pin'
      path: '/reset-pin'
      fullPath: '/auth/reset-pin'
      preLoaderRoute: typeof AuthResetPinLazyImport
      parentRoute: typeof AuthLazyImport
    }
    '/chat/': {
      id: '/chat/'
      path: '/'
      fullPath: '/chat/'
      preLoaderRoute: typeof ChatIndexLazyImport
      parentRoute: typeof ChatLazyImport
    }
  }
}

// Create and export the route tree

interface AuthLazyRouteChildren {
  AuthJoinLazyRoute: typeof AuthJoinLazyRoute
  AuthLoginLazyRoute: typeof AuthLoginLazyRoute
  AuthResetPinLazyRoute: typeof AuthResetPinLazyRoute
}

const AuthLazyRouteChildren: AuthLazyRouteChildren = {
  AuthJoinLazyRoute: AuthJoinLazyRoute,
  AuthLoginLazyRoute: AuthLoginLazyRoute,
  AuthResetPinLazyRoute: AuthResetPinLazyRoute,
}

const AuthLazyRouteWithChildren = AuthLazyRoute._addFileChildren(
  AuthLazyRouteChildren,
)

interface ChatLazyRouteChildren {
  ChatIndexLazyRoute: typeof ChatIndexLazyRoute
}

const ChatLazyRouteChildren: ChatLazyRouteChildren = {
  ChatIndexLazyRoute: ChatIndexLazyRoute,
}

const ChatLazyRouteWithChildren = ChatLazyRoute._addFileChildren(
  ChatLazyRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/auth': typeof AuthLazyRouteWithChildren
  '/chat': typeof ChatLazyRouteWithChildren
  '/auth/join': typeof AuthJoinLazyRoute
  '/auth/login': typeof AuthLoginLazyRoute
  '/auth/reset-pin': typeof AuthResetPinLazyRoute
  '/chat/': typeof ChatIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/auth': typeof AuthLazyRouteWithChildren
  '/auth/join': typeof AuthJoinLazyRoute
  '/auth/login': typeof AuthLoginLazyRoute
  '/auth/reset-pin': typeof AuthResetPinLazyRoute
  '/chat': typeof ChatIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/auth': typeof AuthLazyRouteWithChildren
  '/chat': typeof ChatLazyRouteWithChildren
  '/auth/join': typeof AuthJoinLazyRoute
  '/auth/login': typeof AuthLoginLazyRoute
  '/auth/reset-pin': typeof AuthResetPinLazyRoute
  '/chat/': typeof ChatIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/chat'
    | '/auth/join'
    | '/auth/login'
    | '/auth/reset-pin'
    | '/chat/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/auth' | '/auth/join' | '/auth/login' | '/auth/reset-pin' | '/chat'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/chat'
    | '/auth/join'
    | '/auth/login'
    | '/auth/reset-pin'
    | '/chat/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AuthLazyRoute: typeof AuthLazyRouteWithChildren
  ChatLazyRoute: typeof ChatLazyRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AuthLazyRoute: AuthLazyRouteWithChildren,
  ChatLazyRoute: ChatLazyRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth",
        "/chat"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/auth": {
      "filePath": "auth.lazy.tsx",
      "children": [
        "/auth/join",
        "/auth/login",
        "/auth/reset-pin"
      ]
    },
    "/chat": {
      "filePath": "chat.lazy.tsx",
      "children": [
        "/chat/"
      ]
    },
    "/auth/join": {
      "filePath": "auth/join.lazy.tsx",
      "parent": "/auth"
    },
    "/auth/login": {
      "filePath": "auth/login.lazy.tsx",
      "parent": "/auth"
    },
    "/auth/reset-pin": {
      "filePath": "auth/reset-pin.lazy.tsx",
      "parent": "/auth"
    },
    "/chat/": {
      "filePath": "chat/index.lazy.tsx",
      "parent": "/chat"
    }
  }
}
ROUTE_MANIFEST_END */
